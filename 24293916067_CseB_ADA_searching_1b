#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int BinarySearch(int arr[], int left, int right, int key) {
    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (arr[mid] == key) {
            return mid;
        }

        if (arr[mid] < key) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }

    return -1;
}

void generateRandomArray(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        arr[i] = rand() % 100000;
    }
}

void sortArray(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

int main() {
    int n;
    printf("Enter number of elements: ");
    scanf("%d", &n);

    int arr[n];
    srand(time(0));

    generateRandomArray(arr, n);
    sortArray(arr, n);

    int key;
    printf("Enter element to search: ");
    scanf("%d", &key);

    int index = BinarySearch(arr, 0, n - 1, key);

    if (index == -1)
        printf("Key Not Found\n");
    else
        printf("Key Found at index: %d\n", index);

    clock_t start = clock();
    for (int i = 0; i < 1000; i++) {
        BinarySearch(arr, 0, n - 1, key);
    }
    clock_t end = clock();

    double time_taken = ((double)(end - start)) / CLOCKS_PER_SEC / 1000.0;
    printf("Time taken for search: %f seconds\n", time_taken);

    return 0;
}
